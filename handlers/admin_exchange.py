# - *- coding: utf- 8 - *-
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message
from aiogram.utils.exceptions import MessageCantBeDeleted, CantParseEntities
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage

from modules.services import db, json_logic
from modules.keyboards import  reply_admin, inline_page, inline_admin
from modules.utils.check_func import CheckAdmin
from modules.utils.const_func import get_unix
from handlers import start_user

from contextlib import suppress
from bot_telegram import dp

@dp.message_handler(CheckAdmin(), text = 'üü†–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏—Ä–∂–∞–º–∏ üü†', state = "*")
async def admin_menu_start(message: Message, state: FSMContext):
    await state.finish()
    await message.answer("<b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏—Ä–∂–∞–º–∏</b>", reply_markup=reply_admin.admin__edit_exchange())


# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@dp.message_handler(CheckAdmin(), text= '–°–æ–∑–¥–∞—Ç—å –±–∏—Ä–∂—É ‚ûï', state="*")
async def exchange_create(message: Message, state: FSMContext):
    await state.finish()
    await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –±–∏—Ä–∂–∏</b>")

    await state.set_state("exchange_name")


# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.message_handler(CheckAdmin(), text= '–ò–∑–º–µ–Ω–∏—Ç—å –±–∏—Ä–∂—É üñç', state="*")
async def exchange_edit(message: Message, state: FSMContext):
    await state.finish()
    if len(db.get_all_info("exchange")) >= 1:
        await message.answer("<b>üóÉ –í—ã–±–µ—Ä–∏—Ç–µ –±–∏—Ä–∂—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è üñç</b>", reply_markup= inline_page.exchange_edit_swipe_(0))

    else:
        await message.answer("<b>‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –±–∏—Ä–∂–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π</b>")



# —É—Ç–æ—á–Ω–µ–Ω–∏–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@dp.message_handler(CheckAdmin(), text='–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –±–∏—Ä–∂–∏ ‚ùå', state="*")
async def exchange_remove(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –±–∏—Ä–∂–∏? ‚ùå</b>\n"
                         "‚ùó –¢–∞–∫ –∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã", reply_markup=inline_admin.exchange_remove_confirm())




@dp.message_handler(CheckAdmin(), text= '‚¨Ö –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', state="*")
async def exit_menu(message: Message, state: FSMContext):
    await state.finish()
    await message.answer("<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–¥–º–∏–Ω –º–µ–Ω—é</b>", reply_markup=reply_admin.menu_admin())


####################################
########–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏##########
#####################################


@dp.message_handler(CheckAdmin(), state="exchange_name")
async def exchange_create_name(message: Message, state: FSMContext):
    if len(message.text) <= 50:
        exchange_id = get_unix()
        db.add_exchange(exchange_id, message.text)
        await state.finish()

        exchange = db.get_exchange(exchange_id=exchange_id)

        await message.answer("‚ûñ‚ûñ‚ûñ‚ûñ<b>–ë–∏—Ä–∂–∞ —Å–æ–∑–¥–∞–Ω–∞!</b>‚ûñ‚ûñ‚ûñ‚ûñ\n"
                            f"<b>üóÉ –ë–∏—Ä–∂–∞: <code>{exchange['exchange_name']}</code></b>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n", reply_markup=inline_admin.exchange_edit(exchange_id, 0))

    else:
        await message.answer("<b>‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤.</b>\n"
                             "üóÉ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –±–∏—Ä–∂–∏ üè∑")



# –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.callback_query_handler(CheckAdmin(), text_startswith="catategory_edit_swipe:", state="*")
async def product_exchange_edit_swipe(call: CallbackQuery, state: FSMContext):
    remover = int(call.data.split(":")[1])

    await call.message.edit_text("<b>–í—ã–±–µ—Ä–∏—Ç–µ –±–∏—Ä–∂—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è</b>",reply_markup=inline_page.exchange_edit_swipe_(remover))



@dp.callback_query_handler(CheckAdmin(), text_startswith="exchange_edit_open:", state="*")
async def product_exchange_edit_open(call: CallbackQuery, state: FSMContext):
    exchange_id = call.data.split(":")[1]
    remover = int(call.data.split(":")[2])
    await state.finish()

    exchange = db.get_exchange(exchange_id=exchange_id)


    await call.message.edit_text(f"<b>üóÉ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{exchange['exchange_name']}</code></b>\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n", reply_markup=inline_admin.exchange_edit(exchange_id, remover))


###########################################
#–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ #################
@dp.callback_query_handler(CheckAdmin(), text_startswith="exchange_edit_name:", state="*")
async def —Åategory_edit_name(call: CallbackQuery, state: FSMContext):
    exchange_id = call.data.split(":")[1]
    remover = int(call.data.split(":")[2])
    await state.update_data(cache_exchange_id=exchange_id)
    await state.update_data(cache_exchange_remover=remover)

    with suppress(MessageCantBeDeleted):
        await call.message.delete()

    await state.set_state("change_exchange_name")
    await call.message.answer("<b>üóÉ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –±–∏—Ä–∂–∏ üè∑</b>", reply_markup=inline_admin.exchange_edit_cancel(exchange_id, remover))

@dp.message_handler(CheckAdmin(), state="change_exchange_name")
async def exchange_edit_name_get(message: Message, state: FSMContext):
    exchange_id = (await state.get_data())['cache_exchange_id']
    remover = (await state.get_data())['cache_exchange_remover']
    if len(message.text) <= 50:
        await state.finish()

        db.update_exchange(exchange_id, exchange_name= message.text)

        exchange = db.get_exchange(exchange_id=exchange_id)

        await message.answer(f"<b>üóÉ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{exchange['exchange_name']}</code></b>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n",  reply_markup=inline_admin.exchange_edit(exchange_id, remover))

    else:
        await message.answer("<b>‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤.</b>\n"
                             "üóÉ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –±–∏—Ä–∂–∏–∏ üè∑",
                             reply_markup=inline_admin.exchange_edit_cancel(exchange_id, remover))


@dp.callback_query_handler(CheckAdmin(), text_startswith="exchange_edit_delete:", state="*")
async def exchange_edit_delete(call: CallbackQuery, state: FSMContext):
    exchange_id = call.data.split(":")[1]
    remover = int(call.data.split(":")[2])
    await call.message.edit_text("<b>‚ùó –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –±–∏—Ä–∂—É –∏ –≤—Å–µ –µ—ë –¥–∞–Ω–Ω—ã–µ?</b>", reply_markup=inline_admin.exchange_edit_delete_selected(exchange_id, remover))

# –í—ã–±–æ—Ä —É–¥–∞–ª–µ–Ω–∏–µ –∏–ª–∏ –Ω–µ—Ç
@dp.callback_query_handler(CheckAdmin(), text_startswith="exchange_delete:", state="*")
async def product_exchange_edit_delete_confirm(call: CallbackQuery, state: FSMContext):
    exchange_id = call.data.split(":")[1]
    selected = call.data.split(":")[2]
    remover = int(call.data.split(":")[3])

    if selected == "yes":
        db.delete_exchange(exchange_id=exchange_id)

        await call.answer("üóÉ –ë–∏—Ä–∂–∞ –∏ –≤—Å–µ –µ—ë –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã ‚úÖ")

        if len(db.get_all_info("exchange")) >= 1:
            await call.message.edit_text("<b>üóÉ –í—ã–±–µ—Ä–∏—Ç–µ –ë–∏—Ä–∂—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è üñç</b>", reply_markup=inline_page.exchange_edit_swipe_(remover))

        else:
            with suppress(MessageCantBeDeleted):
                await call.message.delete()

    else:
        exchange = db.get_exchange(exchange_id=exchange_id)
        await message.answer(f"<b>üóÉ –ë–∏—Ä–∂–∞: <code>{exchange['exchange_name']}</code></b>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n",  reply_markup=inline_admin.exchange_edit(exchange_id, remover))


@dp.callback_query_handler(CheckAdmin(), text_startswith="confirm_remove_exchange:", state="*")
async def exchange_remove_confirm(call: CallbackQuery, state: FSMContext):
    selected = call.data.split(":")[1]

    if selected == "yes":
        exchange = len(db.get_all_info("exchange"))
        db.clear_all_exchange()

        await call.message.edit_text(f"<b>üóÉ –í—ã —É–¥–∞–ª–∏–ª–∏ –≤—Å–µ –±–∏—Ä–∂–∏<code>({exchange}—à—Ç)</code> ‚òë</b>")
    else:
        await call.message.edit_text("<b>üóÉ –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –±–∏—Ä–∂ ‚úÖ</b>")

